# coding: utf-8
"""Waylay Broker model tests.

This code was generated from the OpenAPI documentation of 'Waylay Broker'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.data.models.message_query import MessageQuery

    MessageQueryAdapter = TypeAdapter(MessageQuery)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

message_query_model_schema = json.loads(
    r"""{
  "required" : [ "limit", "resources" ],
  "type" : "object",
  "properties" : {
    "resources" : {
      "minItems" : 1,
      "type" : "array",
      "description" : "The list of resources to retrieve the messages for",
      "items" : {
        "$ref" : "#/components/schemas/ResourceId"
      }
    },
    "limit" : {
      "minimum" : 1,
      "type" : "integer",
      "description" : "The number of messages per resource to retrieve"
    },
    "from" : {
      "$ref" : "#/components/schemas/MessageQuery_from"
    },
    "until" : {
      "$ref" : "#/components/schemas/MessageQuery_until"
    },
    "window" : {
      "$ref" : "#/components/schemas/MessageQuery_window"
    }
  }
}
""",
    object_hook=with_example_provider,
)
message_query_model_schema.update({"definitions": MODEL_DEFINITIONS})

message_query_faker = JSF(message_query_model_schema, allow_none_optionals=1)


class MessageQueryStub:
    """MessageQuery unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return message_query_faker.generate(use_defaults=True, use_examples=True)

    @classmethod
    def create_instance(cls) -> "MessageQuery":
        """Create MessageQuery stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if not json:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                MessageQueryAdapter.json_schema(), allow_none_optionals=1
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return MessageQueryAdapter.validate_python(
            json, context={"skip_validation": True}
        )
