name: Waylay Data CI

on:
  push:
    branches: [ "main", "staging", "release/**" ]
    tags:
        - '**'
  pull_request:
    branches: [ "main", "staging", "release/**" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Git with token to access other private repositories
        run: git config --global url."https://${{ secrets.OTOMATOR_PAT }}@github".insteadOf https://github
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/*requirements*.txt'
      - name: install dependencies
        run: make ci-install-types
      - name: code qa
        run: make ci-code-qa
      - name: unit tests
        run: make test

  test-minimal:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Git with token to access other private repositories
        run: git config --global url."https://${{ secrets.OTOMATOR_PAT }}@github".insteadOf https://github
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/*requirements*.txt'
      - name: install dependencies
        run: make ci-install-api
      - name: unit tests
        run: make test

  publish-api:
    needs: 
      - test
      - test-minimal
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    defaults:
      run:
        working-directory: ./waylay-sdk-data

    name: Publish api package to PyPI
    runs-on: ubuntu-latest
    environment:
      name: testpypi # TODO change to pypi
      # url: https://pypi.org/p/waylay-sdk-data
      url: https://test.pypi.org/p/waylay-sdk-data # TODO REMOVE

    permissions:
      actions: read
      contents: read
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install pypa/build
      run: pip install build
    - name: check version
      id: check-tag
      uses: samuelcolvin/check-python-version@v4.1
      with:
        version_file_path: waylay-sdk-data/src/waylay/services/data/service/__init__.py
    - name: Build
      run: python3 -m build
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/ # TODO remove
        packages-dir: waylay-sdk-data/dist

  publish-types:
    needs: 
      - test
      - test-minimal
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    defaults:
      run:
        working-directory: ./waylay-sdk-data-types

    name: Publish types package to PyPI
    runs-on: ubuntu-latest
    environment:
      name: testpypi # TODO change to pypi
      # url: https://pypi.org/p/waylay-sdk-data-types
      url: https://test.pypi.org/p/waylay-sdk-data-types # TODO REMOVE
    

    permissions:
      actions: read
      contents: read
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install pypa/build
      run: pip install build
    - name: check version
      id: check-tag
      uses: samuelcolvin/check-python-version@v4.1
      with:
        version_file_path: waylay-sdk-data-types/src/waylay/services/data/models/__init__.py
    - name: Build
      run: python3 -m build
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/ # TODO remove
        packages-dir: waylay-sdk-data-types/dist

  github-release:
    name: Create GitHub Release
    needs:
      - publish-api
      - publish-types
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases

    steps:
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.OTOMATOR_PAT }}
      run: >-
        gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
